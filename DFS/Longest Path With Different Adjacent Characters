//https://leetcode.com/problems/longest-path-with-different-adjacent-characters/
class Solution {
public:
    int ans;
    vector<int>adj[500005];
    int dfs(int node ,string &s)
    {
        if(adj[node].empty())
            return 1;
        int max1=0,max2=0;
        for(int &child:adj[node])
        {
            int len=dfs(child,s);
            ans=max(ans,len);
            if(s[child]==s[node])
                continue;
            if(len>max1)
            {
                max2=max1;
                max1=len;
            }
            else
            {
                max2=max(max2,len);
            }
            
        }
        ans=max(ans,1+max1+max2);
        return 1+max1;
    }
    int longestPath(vector<int>& parent, string s) {
        int n = parent.size();
        for(int i=1;i<n;i++)adj[parent[i]].push_back(i);
        ans = 1;
        dfs(0,s);
        return ans;
        
        
        
    }
};
